@model NexxtDent.Models.ReceptionAssignDetail

@{
    ViewBag.Title = @Resources.Resource.RepAssignDetail_ViewIndex_Titulo;
}

<h2>@Resources.Resource.RepAssignDetail_ViewIndex_Titulo</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Resources.Resource.RepAssignDetail_ViewIndex_Titulo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ReceptionAssignId)
        @Html.HiddenFor(model => model.StateId)

        <div class="form-group">
            @Html.LabelFor(model => model.TechnicalId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TechnicalId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TechnicalId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ServiceCategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ServiceId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LevelPriceId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LevelPriceId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LevelPriceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tasa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tasa, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Tasa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @readonly = "True", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@Resources.Resource.ButtonAdd class="btn btn-primary" /> |
                @Html.ActionLink(@Resources.Resource.ButtonBack, "Details", new { id = Model.ReceptionAssignId }, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}


<script type="text/javascript">
            $(document).ready(function () {
                $("#ServiceCategoryId").change(function () {
                    $("#ServiceId").empty();
                    $("#ServiceId").append('<option value="0">[Seleccione Trabajo...]</option>');
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetService")',
                        dataType: 'json',
                        data: { ServiceCategoryId: $("#ServiceCategoryId").val() },
                        success: function (data) {
                            $.each(data, function (i, data) {
                                $("#ServiceId").append('<option value="'
                                    + data.ServiceId + '">'
                                    + data.Servicio + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('Error de Lectura de Relacion' + ex);
                        }
                    });
                    return false;
                })
            });
</script>

<script type="text/javascript">
            $(document).ready(function () {
                $("#LevelPriceId").change(function () {
                    $("#Precio").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetPrecio")',
                        dataType: 'json',
                        data: { LevelPriceId: $("#LevelPriceId").val(), ServiceId: $("#ServiceId").val() },
                        success: function (data)
                        {
                            console.log(data);
                           $("#Precio").val(data);
                        },
                        error: function (ex) {
                            alert('Error de Lectura de Relacion' + ex);
                        }
                    });
                    return false;
                })
            });
</script>

<script type="text/javascript">
    $("#Precio, #Cantidad").on("input", function () {
        var val1 = parseInt($('#Precio').val());
        var val2 = parseInt($('#Cantidad').val());

        if (!isNaN(val1) && !isNaN(val2))
            $('#Total').val(val1 * val2);
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}